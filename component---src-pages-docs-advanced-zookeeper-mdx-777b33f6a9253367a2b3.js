(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{"/94A":function(e){e.exports=JSON.parse('{"root":["index","setup"],"References":{"Community articles":"/community/articles","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"Server":["server-basics","server-decorator","server-grpc","server-thrift","server-docservice","server-annotated-service","server-http-file","server-servlet","server-access-log","server-cors","server-sse"],"Client":["client-http","client-thrift","client-grpc","client-decorator","client-retrofit","client-custom-http-headers","client-timeouts","client-retry","client-circuit-breaker","client-service-discovery"],"Advanced":["advanced-logging","advanced-structured-logging","advanced-custom-attributes","advanced-structured-logging-kafka","advanced-unit-testing","advanced-production-checklist","advanced-zipkin","advanced-zookeeper","advanced-saml","advanced-spring-webflux-integration","advanced-dropwizard-integration"]}')},LhBn:function(e){e.exports=JSON.parse('{"data":{"allMdx":{"nodes":[{"tableOfContents":{"items":[{"url":"#requestcontext-custom-attributes","title":"RequestContext custom attributes"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-custom-attributes"}},{"tableOfContents":{"items":[{"url":"#logging-contextual-information","title":"Logging contextual information"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-logging"}},{"tableOfContents":{"items":[{"url":"#using-armeria-with-dropwizard","title":"Using Armeria with Dropwizard"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-dropwizard-integration"}},{"tableOfContents":{"items":[{"url":"#production-checklist","title":"Production checklist"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-production-checklist"}},{"tableOfContents":{"items":[{"url":"#saml-single-sign-on","title":"SAML Single Sign-On"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-saml"}},{"tableOfContents":{"items":[{"url":"#using-armeria-with-spring-webflux","title":"Using Armeria with Spring WebFlux"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-spring-webflux-integration"}},{"tableOfContents":{"items":[{"url":"#structured-logging-with-kafka","title":"Structured logging with Kafka"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-structured-logging-kafka"}},{"tableOfContents":{"items":[{"url":"#unit-testing-client-and-service","title":"Unit-testing Client and Service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-unit-testing"}},{"tableOfContents":{"items":[{"url":"#structured-logging","title":"Structured logging"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-structured-logging"}},{"tableOfContents":{"items":[{"url":"#zipkin-integration","title":"Zipkin integration"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-zipkin"}},{"tableOfContents":{"items":[{"url":"#service-discovery-with-zookeeper","title":"Service discovery with ZooKeeper"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-zookeeper"}},{"tableOfContents":{"items":[{"url":"#circuit-breaker","title":"Circuit breaker"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-circuit-breaker"}},{"tableOfContents":{"items":[{"url":"#sending-custom-http-headers","title":"Sending custom HTTP headers"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-custom-http-headers"}},{"tableOfContents":{"items":[{"url":"#decorating-a-client","title":"Decorating a client"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-decorator"}},{"tableOfContents":{"items":[{"url":"#calling-a-grpc-service","title":"Calling a gRPC service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-grpc"}},{"tableOfContents":{"items":[{"url":"#calling-an-http-service","title":"Calling an HTTP service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-http"}},{"tableOfContents":{"items":[{"url":"#retrofit-integration","title":"Retrofit integration"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-retrofit"}},{"tableOfContents":{"items":[{"url":"#automatic-retry","title":"Automatic retry"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-retry"}},{"tableOfContents":{"items":[{"url":"#client-side-load-balancing-and-service-discovery","title":"Client-side load balancing and service discovery"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-service-discovery"}},{"tableOfContents":{"items":[{"url":"#calling-a-thrift-service","title":"Calling a Thrift service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-thrift"}},{"tableOfContents":{"items":[{"url":"#overriding-client-timeouts","title":"Overriding client timeouts"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-timeouts"}},{"tableOfContents":{"items":[{"url":"#user-manual","title":"User manual"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"index"}},{"tableOfContents":{"items":[{"url":"#writing-an-access-log","title":"Writing an access log"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-access-log"}},{"tableOfContents":{"items":[{"url":"#server-basics","title":"Server basics"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-basics"}},{"tableOfContents":{"items":[{"url":"#annotated-services","title":"Annotated services"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-annotated-service"}},{"tableOfContents":{"items":[{"url":"#configuring-cors","title":"Configuring CORS"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-cors"}},{"tableOfContents":{"items":[{"url":"#decorating-a-service","title":"Decorating a service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-decorator"}},{"tableOfContents":{"items":[{"url":"#browsing-and-invoking-services-with-docservice","title":"Browsing and invoking services with DocService"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-docservice"}},{"tableOfContents":{"items":[{"url":"#running-a-grpc-service","title":"Running a gRPC service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-grpc"}},{"tableOfContents":{"items":[{"url":"#serving-static-files","title":"Serving static files"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-http-file"}},{"tableOfContents":{"items":[{"url":"#embedding-a-servlet-container","title":"Embedding a servlet container"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-servlet"}},{"tableOfContents":{"items":[{"url":"#serving-server-sent-events","title":"Serving Server-Sent Events"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-sse"}},{"tableOfContents":{"items":[{"url":"#running-a-thrift-service","title":"Running a Thrift service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-thrift"}},{"tableOfContents":{"items":[{"url":"#setting-up-a-project","title":"Setting up a project"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"setup"}}]}}}')},eDff:function(e,t,n){"use strict";n.r(t),n.d(t,"pageTitle",(function(){return i})),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp"),r=n("xCMr");var i="Service discovery with ZooKeeper",o={},s={pageTitle:i,_frontmatter:o},c=r.a;function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(c,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"service-discovery-with-zookeeper",style:{position:"relative"}},Object(a.b)("a",Object.assign({parentName:"h1"},{href:"#service-discovery-with-zookeeper","aria-label":"service discovery with zookeeper permalink",className:"anchor before"}),Object(a.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(a.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Service discovery with ZooKeeper"),Object(a.b)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#automatic-service-registration"}),"Automatic service registration"))),Object(a.b)("p",null,"You can put the list of available ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"typeplural://Endpoint:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/Endpoint.html"}),"typeplural://Endpoint")," into a zNode in\n",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://zookeeper.apache.org/"}),"Apache ZooKeeper")," cluster as a node tree, like the following:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"# Note: Only child node values are used. i.e. Child node names are ignored.\n- /myProductionEndpoints\n  - /192.168.1.10_8080: 192.168.1.10:8080\n  - /192.168.1.11_8080: 192.168.1.11:8080:100\n")),Object(a.b)("p",null,"In the examples above, ",Object(a.b)("inlineCode",{parentName:"p"},"192.168.1.10")," and other IP strings are your servers' IP addresses, ",Object(a.b)("inlineCode",{parentName:"p"},"8080")," is a\nservice port number and ",Object(a.b)("inlineCode",{parentName:"p"},"100")," is a weight value. You can omit a weight value as it is optional."),Object(a.b)("p",null,"Create a ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"type://ZooKeeperEndpointGroup:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/zookeeper/ZooKeeperEndpointGroup.html"}),"type://ZooKeeperEndpointGroup")," to retrieve this information:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),'import com.linecorp.armeria.client.endpoint.EndpointGroup;\nimport com.linecorp.armeria.client.zookeeper.ZooKeeperEndpointGroup;\n\nEndpointGroup myEndpointGroup =\n        ZooKeeperEndpointGroup.builder(/* zkConnectionStr */ "myZooKeeperHost:2181",\n                                       /* zNodePath       */ "/myProductionEndpoints")\n                              .customizer(builder ->  builder.sessionTimeoutMs(10000))\n                              .build();\n')),Object(a.b)("p",null,"And then specify it when you build a client:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),'HelloService.Iface helloClient =\n        Clients.builder("tbinary+http", myEndpointGroup, "/hello")\n               .build(HelloService.Iface.class);\n')),Object(a.b)("p",null,"For more information, please refer to the API documentation of the\n",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/zookeeper/package-summary.html"}),"com.linecorp.armeria.server.zookeeper")," package."),Object(a.b)("h2",{id:"automatic-service-registration",style:{position:"relative"}},Object(a.b)("a",Object.assign({parentName:"h2"},{href:"#automatic-service-registration","aria-label":"automatic service registration permalink",className:"anchor before"}),Object(a.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(a.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Automatic service registration"),Object(a.b)("p",null,"Use ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"type://ZooKeeperUpdatingListenerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/zookeeper/ZooKeeperUpdatingListenerBuilder.html"}),"type://ZooKeeperUpdatingListenerBuilder")," to register your server to a ZooKeeper cluster:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),'import com.linecorp.armeria.server.ServerListener;\nimport com.linecorp.armeria.server.zookeeper.ZooKeeperUpdatingListenerBuilder;\n\nZooKeeperUpdatingListener listener =\n        ZooKeeperUpdatingListener.builder("myZooKeeperHost:2181", "/myProductionEndpoints")\n                                 .sessionTimeout(10000)\n                                 .build();\nserver.addListener(listener);\nserver.start();\n...\n')),Object(a.b)("p",null,"You can also use an existing\n",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://curator.apache.org/apidocs/org/apache/curator/framework/CuratorFramework.html"}),"CuratorFramework"),"\ninstance instead of ZooKeeper connection string:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),'import com.linecorp.armeria.server.ServerListener;\nimport com.linecorp.armeria.server.zookeeper.ZooKeeperUpdatingListenerBuilder;\nimport org.apache.curator.framework.CuratorFramework;\n\nCuratorFramework client = ...\nZooKeeperUpdatingListener listener =\n        ZooKeeperUpdatingListener.builder(client, "/myProductionEndpoints")\n                                 .code(NodeValueCodec.ofDefault())\n                                 .build();\nserver.addListener(listener);\nserver.start();\n...\n')),Object(a.b)("p",null,"When your server starts up, ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"type://ZooKeeperUpdatingListener:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/zookeeper/ZooKeeperUpdatingListener.html"}),"type://ZooKeeperUpdatingListener")," will register the server automatically to the\nspecified zNode as a member of the cluster. Each server will represent itself as\n",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://zookeeper.apache.org/doc/r3.4.10/zookeeperOver.html#Nodes+and+ephemeral+nodes"}),"an EPHEMERAL node"),", which\nmeans when a server stops or a network partition between your server and ZooKeeper cluster occurs, the node of\nthe server that became unreachable will be deleted automatically by ZooKeeper. As a result, the clients that\nuse a ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"type://ZooKeeperEndpointGroup:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/zookeeper/ZooKeeperEndpointGroup.html"}),"type://ZooKeeperEndpointGroup")," will be notified and they will update their endpoint list automatically\nso that they do not attempt to connect to the unreachable servers."),Object(a.b)("p",null,"For more information, please refer to the API documentation of the\n",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/zookeeper/package-summary.html"}),"com.linecorp.armeria.server.zookeeper")," package."))}l.isMDXComponent=!0},xCMr:function(e,t,n){"use strict";n("E5k/");var a=n("LhBn"),r=n("q1tI"),i=n.n(r),o=n("/94A"),s=n("+ejy");t.a=function(e){var t=a.data.allMdx.nodes;return i.a.createElement(s.a,Object.assign({},e,{candidateMdxNodes:t,index:o,prefix:"docs",pageTitleSuffix:"Armeria documentation"}))}}}]);
//# sourceMappingURL=component---src-pages-docs-advanced-zookeeper-mdx-777b33f6a9253367a2b3.js.map